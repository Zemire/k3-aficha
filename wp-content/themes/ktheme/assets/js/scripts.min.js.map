{"version":3,"sources":["device.js","init-foundation.js","jquery.matchHeight.js","slick.js","wp-foundation.js"],"names":["device","previousDevice","addClass","documentElement","find","handleOrientation","hasClass","orientationEvent","removeClass","userAgent","window","document","navigator","toLowerCase","ios","iphone","ipod","ipad","windows","android","androidPhone","androidTablet","blackberry","blackberryPhone","blackberryTablet","windowsPhone","windowsTablet","fxos","fxosPhone","fxosTablet","meego","cordova","location","protocol","nodeWebkit","process","mobile","tablet","desktop","television","i","length","portrait","innerHeight","innerWidth","landscape","noConflict","this","needle","indexOf","className","regex","RegExp","match","currentClassNames","replace","Object","prototype","hasOwnProperty","call","addEventListener","attachEvent","define","amd","module","exports","jQuery","foundation","factory","require","$","_previousResizeWidth","_updateTimeout","_parse","value","parseFloat","_rows","elements","tolerance","$elements","lastTop","rows","each","$that","top","offset","css","lastRow","push","Math","floor","abs","add","_parseOptions","options","opts","byRow","property","target","remove","extend","matchHeight","fn","that","_groups","key","group","not","_apply","version","_throttle","_maintainScroll","_beforeUpdate","_afterUpdate","scrollTop","htmlHeight","outerHeight","$hiddenParents","parents","filter","data","attr","display","padding-top","padding-bottom","margin-top","margin-bottom","border-top-width","border-bottom-width","height","overflow","row","$row","targetHeight","style","verticalPadding","is","_applyDataApi","groups","$this","groupId","_update","event","throttle","type","windowWidth","width","setTimeout","bind","Slick","element","settings","dataSettings","_","defaults","accessibility","adaptiveHeight","appendArrows","appendDots","arrows","asNavFor","prevArrow","nextArrow","autoplay","autoplaySpeed","centerMode","centerPadding","cssEase","customPaging","slider","text","dots","dotsClass","draggable","easing","edgeFriction","fade","focusOnSelect","infinite","initialSlide","lazyLoad","mobileFirst","pauseOnHover","pauseOnFocus","pauseOnDotsHover","respondTo","responsive","rtl","slide","slidesPerRow","slidesToShow","slidesToScroll","speed","swipe","swipeToSlide","touchMove","touchThreshold","useCSS","useTransform","variableWidth","vertical","verticalSwiping","waitForAnimate","zIndex","initials","animating","dragging","autoPlayTimer","currentDirection","currentLeft","currentSlide","direction","$dots","listWidth","listHeight","loadIndex","$nextArrow","$prevArrow","slideCount","slideWidth","$slideTrack","$slides","sliding","slideOffset","swipeLeft","$list","touchObject","transformsEnabled","unslicked","activeBreakpoint","animType","animProp","breakpoints","breakpointSettings","cssTransitions","focussed","interrupted","hidden","paused","positionProp","rowCount","shouldClick","$slider","$slidesCache","transformType","transitionType","visibilityChange","windowTimer","originalSettings","mozHidden","webkitHidden","autoPlay","proxy","autoPlayClear","autoPlayIterator","changeSlide","clickHandler","selectHandler","setPosition","swipeHandler","dragHandler","keyHandler","instanceUid","htmlExpr","registerBreakpoints","init","activateADA","aria-hidden","tabindex","addSlide","slickAdd","markup","index","addBefore","unload","appendTo","insertBefore","eq","insertAfter","prependTo","children","detach","append","reinit","animateHeight","animate","animateSlide","targetLeft","callback","animProps","left","animStart","duration","step","now","ceil","complete","applyTransition","disableTransition","getNavTarget","slick","slideHandler","transition","setInterval","clearInterval","slideTo","buildArrows","removeAttr","test","aria-disabled","buildDots","dot","getDotCount","first","buildOut","wrapAll","parent","wrap","setupInfinite","updateDots","setSlideClasses","buildRows","a","b","c","newSlides","numOfSlides","originalSlides","slidesPerSection","createDocumentFragment","createElement","get","appendChild","empty","checkResponsive","initial","forceUpdate","breakpoint","targetBreakpoint","respondToWidth","triggerBreakpoint","sliderWidth","min","unslick","refresh","trigger","dontAnimate","indexOffset","unevenOffset","$target","currentTarget","preventDefault","closest","message","checkNavigable","navigables","prevNavigable","getNavigableIndexes","n","cleanUpEvents","off","interrupt","visibility","cleanUpSlideEvents","orientationChange","resize","cleanUpRows","stopImmediatePropagation","stopPropagation","destroy","fadeSlide","slideIndex","opacity","fadeSlideOut","filterSlides","slickFilter","focusHandler","on","$sf","getCurrent","slickCurrentSlide","breakPoint","counter","pagerQty","getLeft","verticalHeight","targetSlide","verticalOffset","offsetLeft","outerWidth","getOption","slickGetOption","option","max","indexes","getSlick","getSlideCount","slidesTraversed","swipedSlide","centerOffset","goTo","slickGoTo","parseInt","creation","setProps","startLoad","loadSlider","initializeEvents","updateArrows","initADA","role","aria-describedby","aria-selected","aria-controls","id","end","initArrowEvents","initDotEvents","initSlideEvents","action","initUI","show","tagName","keyCode","loadImages","imagesScope","image","imageSource","imageToLoad","onload","onerror","src","loadRange","cloneRange","rangeStart","rangeEnd","slice","progressiveLazyLoad","next","slickNext","pause","slickPause","play","slickPlay","postSlide","prev","slickPrev","tryCount","$imgsToLoad","initializing","lastVisibleIndex","currentBreakpoint","l","responsiveSettings","splice","sort","clearTimeout","windowDelay","removeSlide","slickRemove","removeBefore","removeAll","setCSS","position","x","y","positionProps","setDimensions","padding","setFade","right","setHeight","setOption","slickSetOption","item","arguments","opt","val","bodyStyle","body","undefined","WebkitTransition","MozTransition","msTransition","OTransform","perspectiveProperty","webkitPerspective","MozTransform","MozPerspective","webkitTransform","msTransform","transform","allSlides","remainder","infiniteCount","clone","toggle","targetElement","sync","animSlide","oldSlide","slideLeft","navTarget","hide","swipeDirection","xDist","yDist","r","swipeAngle","startX","curX","startY","curY","atan2","round","PI","swipeEnd","swipeLength","edgeHit","minSwipe","fingerCount","originalEvent","touches","swipeStart","swipeMove","curLeft","positionOffset","pageX","clientX","pageY","clientY","sqrt","pow","unfilterSlides","slickUnfilter","fromBreakpoint","ret","args","Array","apply","ready","last"],"mappings":"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","file":"scripts.min.js","sourcesContent":["// Device.js\n// (c) 2014 Matthew Hudson\n// Device.js is freely distributable under the MIT license.\n// For all details and documentation:\n// http://matthewhudson.me/projects/device.js/\n\n(function() {\n\n  var device,\n    previousDevice,\n    addClass,\n    documentElement,\n    find,\n    handleOrientation,\n    hasClass,\n    orientationEvent,\n    removeClass,\n    userAgent;\n\n  // Save the previous value of the device variable.\n  previousDevice = window.device;\n\n  device = {};\n\n  // Add device as a global object.\n  window.device = device;\n\n  // The <html> element.\n  documentElement = window.document.documentElement;\n\n  // The client user agent string.\n  // Lowercase, so we can use the more efficient indexOf(), instead of Regex\n  userAgent = window.navigator.userAgent.toLowerCase();\n\n  // Main functions\n  // --------------\n\n  device.ios = function () {\n    return device.iphone() || device.ipod() || device.ipad();\n  };\n\n  device.iphone = function () {\n    return !device.windows() && find('iphone');\n  };\n\n  device.ipod = function () {\n    return find('ipod');\n  };\n\n  device.ipad = function () {\n    return find('ipad');\n  };\n\n  device.android = function () {\n    return !device.windows() && find('android');\n  };\n\n  device.androidPhone = function () {\n    return device.android() && find('mobile');\n  };\n\n  device.androidTablet = function () {\n    return device.android() && !find('mobile');\n  };\n\n  device.blackberry = function () {\n    return find('blackberry') || find('bb10') || find('rim');\n  };\n\n  device.blackberryPhone = function () {\n    return device.blackberry() && !find('tablet');\n  };\n\n  device.blackberryTablet = function () {\n    return device.blackberry() && find('tablet');\n  };\n\n  device.windows = function () {\n    return find('windows');\n  };\n\n  device.windowsPhone = function () {\n    return device.windows() && find('phone');\n  };\n\n  device.windowsTablet = function () {\n    return device.windows() && (find('touch') && !device.windowsPhone());\n  };\n\n  device.fxos = function () {\n    return (find('(mobile;') || find('(tablet;')) && find('; rv:');\n  };\n\n  device.fxosPhone = function () {\n    return device.fxos() && find('mobile');\n  };\n\n  device.fxosTablet = function () {\n    return device.fxos() && find('tablet');\n  };\n\n  device.meego = function () {\n    return find('meego');\n  };\n\n  device.cordova = function () {\n    return window.cordova && location.protocol === 'file:';\n  };\n\n  device.nodeWebkit = function () {\n    return typeof window.process === 'object';\n  };\n\n  device.mobile = function () {\n    return device.androidPhone() || device.iphone() || device.ipod() || device.windowsPhone() || device.blackberryPhone() || device.fxosPhone() || device.meego();\n  };\n\n  device.tablet = function () {\n    return device.ipad() || device.androidTablet() || device.blackberryTablet() || device.windowsTablet() || device.fxosTablet();\n  };\n\n  device.desktop = function () {\n    return !device.tablet() && !device.mobile();\n  };\n\n  device.television = function() {\n    var i, television = [\n      \"googletv\",\n      \"viera\",\n      \"smarttv\",\n      \"internet.tv\",\n      \"netcast\",\n      \"nettv\",\n      \"appletv\",\n      \"boxee\",\n      \"kylo\",\n      \"roku\",\n      \"dlnadoc\",\n      \"roku\",\n      \"pov_tv\",\n      \"hbbtv\",\n      \"ce-html\"\n    ];\n\n    i = 0;\n    while (i < television.length) {\n      if (find(television[i])) {\n        return true;\n      }\n      i++;\n    }\n    return false;\n  };\n\n  device.portrait = function () {\n    return (window.innerHeight / window.innerWidth) > 1;\n  };\n\n  device.landscape = function () {\n    return (window.innerHeight / window.innerWidth) < 1;\n  };\n\n  // Public Utility Functions\n  // ------------------------\n\n  // Run device.js in noConflict mode,\n  // returning the device variable to its previous owner.\n  device.noConflict = function () {\n    window.device = previousDevice;\n    return this;\n  };\n\n  // Private Utility Functions\n  // -------------------------\n\n  // Simple UA string search\n  find = function (needle) {\n    return userAgent.indexOf(needle) !== -1;\n  };\n\n  // Check if documentElement already has a given class.\n  hasClass = function (className) {\n    var regex;\n    regex = new RegExp(className, 'i');\n    return documentElement.className.match(regex);\n  };\n\n  // Add one or more CSS classes to the <html> element.\n  addClass = function (className) {\n    var currentClassNames = null;\n    if (!hasClass(className)) {\n      currentClassNames = documentElement.className.replace(/^\\s+|\\s+$/g, '');\n      documentElement.className = currentClassNames + \" \" + className;\n    }\n  };\n\n  // Remove single CSS class from the <html> element.\n  removeClass = function (className) {\n    if (hasClass(className)) {\n      documentElement.className = documentElement.className.replace(\" \" + className, \"\");\n    }\n  };\n\n  // HTML Element Handling\n  // ---------------------\n\n  // Insert the appropriate CSS class based on the _user_agent.\n\n  if (device.ios()) {\n    if (device.ipad()) {\n      addClass(\"ios ipad tablet\");\n    } else if (device.iphone()) {\n      addClass(\"ios iphone mobile\");\n    } else if (device.ipod()) {\n      addClass(\"ios ipod mobile\");\n    }\n  } else if (device.android()) {\n    if (device.androidTablet()) {\n      addClass(\"android tablet\");\n    } else {\n      addClass(\"android mobile\");\n    }\n  } else if (device.blackberry()) {\n    if (device.blackberryTablet()) {\n      addClass(\"blackberry tablet\");\n    } else {\n      addClass(\"blackberry mobile\");\n    }\n  } else if (device.windows()) {\n    if (device.windowsTablet()) {\n      addClass(\"windows tablet\");\n    } else if (device.windowsPhone()) {\n      addClass(\"windows mobile\");\n    } else {\n      addClass(\"desktop\");\n    }\n  } else if (device.fxos()) {\n    if (device.fxosTablet()) {\n      addClass(\"fxos tablet\");\n    } else {\n      addClass(\"fxos mobile\");\n    }\n  } else if (device.meego()) {\n    addClass(\"meego mobile\");\n  } else if (device.nodeWebkit()) {\n    addClass(\"node-webkit\");\n  } else if (device.television()) {\n    addClass(\"television\");\n  } else if (device.desktop()) {\n    addClass(\"desktop\");\n  }\n\n  if (device.cordova()) {\n    addClass(\"cordova\");\n  }\n\n  // Orientation Handling\n  // --------------------\n\n  // Handle device orientation changes.\n  handleOrientation = function () {\n    if (device.landscape()) {\n      removeClass(\"portrait\");\n      addClass(\"landscape\");\n    } else {\n      removeClass(\"landscape\");\n      addClass(\"portrait\");\n    }\n  };\n\n  // Detect whether device supports orientationchange event,\n  // otherwise fall back to the resize event.\n  if (Object.prototype.hasOwnProperty.call(window, \"onorientationchange\")) {\n    orientationEvent = \"orientationchange\";\n  } else {\n    orientationEvent = \"resize\";\n  }\n\n  // Listen for changes in orientation.\n  if (window.addEventListener) {\n    window.addEventListener(orientationEvent, handleOrientation, false);\n  } else if (window.attachEvent) {\n    window.attachEvent(orientationEvent, handleOrientation);\n  } else {\n    window[orientationEvent] = handleOrientation;\n  }\n\n  handleOrientation();\n\n  if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    define(function() {\n      return device;\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = device;\n  } else {\n    window.device = device;\n  }\n\n}).call(this);\n","jQuery(document).foundation();","/**\r\n* jquery-match-height master by @liabru\r\n* http://brm.io/jquery-match-height/\r\n* License: MIT\r\n*/\r\n\r\n;(function(factory) { // eslint-disable-line no-extra-semi\r\n    'use strict';\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD\r\n        define(['jquery'], factory);\r\n    } else if (typeof module !== 'undefined' && module.exports) {\r\n        // CommonJS\r\n        module.exports = factory(require('jquery'));\r\n    } else {\r\n        // Global\r\n        factory(jQuery);\r\n    }\r\n})(function($) {\r\n    /*\r\n    *  internal\r\n    */\r\n\r\n    var _previousResizeWidth = -1,\r\n        _updateTimeout = -1;\r\n\r\n    /*\r\n    *  _parse\r\n    *  value parse utility function\r\n    */\r\n\r\n    var _parse = function(value) {\r\n        // parse value and convert NaN to 0\r\n        return parseFloat(value) || 0;\r\n    };\r\n\r\n    /*\r\n    *  _rows\r\n    *  utility function returns array of jQuery selections representing each row\r\n    *  (as displayed after float wrapping applied by browser)\r\n    */\r\n\r\n    var _rows = function(elements) {\r\n        var tolerance = 1,\r\n            $elements = $(elements),\r\n            lastTop = null,\r\n            rows = [];\r\n\r\n        // group elements by their top position\r\n        $elements.each(function(){\r\n            var $that = $(this),\r\n                top = $that.offset().top - _parse($that.css('margin-top')),\r\n                lastRow = rows.length > 0 ? rows[rows.length - 1] : null;\r\n\r\n            if (lastRow === null) {\r\n                // first item on the row, so just push it\r\n                rows.push($that);\r\n            } else {\r\n                // if the row top is the same, add to the row group\r\n                if (Math.floor(Math.abs(lastTop - top)) <= tolerance) {\r\n                    rows[rows.length - 1] = lastRow.add($that);\r\n                } else {\r\n                    // otherwise start a new row group\r\n                    rows.push($that);\r\n                }\r\n            }\r\n\r\n            // keep track of the last row top\r\n            lastTop = top;\r\n        });\r\n\r\n        return rows;\r\n    };\r\n\r\n    /*\r\n    *  _parseOptions\r\n    *  handle plugin options\r\n    */\r\n\r\n    var _parseOptions = function(options) {\r\n        var opts = {\r\n            byRow: true,\r\n            property: 'height',\r\n            target: null,\r\n            remove: false\r\n        };\r\n\r\n        if (typeof options === 'object') {\r\n            return $.extend(opts, options);\r\n        }\r\n\r\n        if (typeof options === 'boolean') {\r\n            opts.byRow = options;\r\n        } else if (options === 'remove') {\r\n            opts.remove = true;\r\n        }\r\n        return opts;\r\n    };\r\n\r\n    /*\r\n    *  matchHeight\r\n    *  plugin definition\r\n    */\r\n\r\n    var matchHeight = $.fn.matchHeight = function(options) {\r\n        var opts = _parseOptions(options);\r\n\r\n        // handle remove\r\n        if (opts.remove) {\r\n            var that = this;\r\n\r\n            // remove fixed height from all selected elements\r\n            this.css(opts.property, '');\r\n\r\n            // remove selected elements from all groups\r\n            $.each(matchHeight._groups, function(key, group) {\r\n                group.elements = group.elements.not(that);\r\n            });\r\n\r\n            // TODO: cleanup empty groups\r\n\r\n            return this;\r\n        }\r\n\r\n        if (this.length <= 1 && !opts.target) {\r\n            return this;\r\n        }\r\n\r\n        // keep track of this group so we can re-apply later on load and resize events\r\n        matchHeight._groups.push({\r\n            elements: this,\r\n            options: opts\r\n        });\r\n\r\n        // match each element's height to the tallest element in the selection\r\n        matchHeight._apply(this, opts);\r\n\r\n        return this;\r\n    };\r\n\r\n    /*\r\n    *  plugin global options\r\n    */\r\n\r\n    matchHeight.version = 'master';\r\n    matchHeight._groups = [];\r\n    matchHeight._throttle = 80;\r\n    matchHeight._maintainScroll = false;\r\n    matchHeight._beforeUpdate = null;\r\n    matchHeight._afterUpdate = null;\r\n    matchHeight._rows = _rows;\r\n    matchHeight._parse = _parse;\r\n    matchHeight._parseOptions = _parseOptions;\r\n\r\n    /*\r\n    *  matchHeight._apply\r\n    *  apply matchHeight to given elements\r\n    */\r\n\r\n    matchHeight._apply = function(elements, options) {\r\n        var opts = _parseOptions(options),\r\n            $elements = $(elements),\r\n            rows = [$elements];\r\n\r\n        // take note of scroll position\r\n        var scrollTop = $(window).scrollTop(),\r\n            htmlHeight = $('html').outerHeight(true);\r\n\r\n        // get hidden parents\r\n        var $hiddenParents = $elements.parents().filter(':hidden');\r\n\r\n        // cache the original inline style\r\n        $hiddenParents.each(function() {\r\n            var $that = $(this);\r\n            $that.data('style-cache', $that.attr('style'));\r\n        });\r\n\r\n        // temporarily must force hidden parents visible\r\n        $hiddenParents.css('display', 'block');\r\n\r\n        // get rows if using byRow, otherwise assume one row\r\n        if (opts.byRow && !opts.target) {\r\n\r\n            // must first force an arbitrary equal height so floating elements break evenly\r\n            $elements.each(function() {\r\n                var $that = $(this),\r\n                    display = $that.css('display');\r\n\r\n                // temporarily force a usable display value\r\n                if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\r\n                    display = 'block';\r\n                }\r\n\r\n                // cache the original inline style\r\n                $that.data('style-cache', $that.attr('style'));\r\n\r\n                $that.css({\r\n                    'display': display,\r\n                    'padding-top': '0',\r\n                    'padding-bottom': '0',\r\n                    'margin-top': '0',\r\n                    'margin-bottom': '0',\r\n                    'border-top-width': '0',\r\n                    'border-bottom-width': '0',\r\n                    'height': '100px',\r\n                    'overflow': 'hidden'\r\n                });\r\n            });\r\n\r\n            // get the array of rows (based on element top position)\r\n            rows = _rows($elements);\r\n\r\n            // revert original inline styles\r\n            $elements.each(function() {\r\n                var $that = $(this);\r\n                $that.attr('style', $that.data('style-cache') || '');\r\n            });\r\n        }\r\n\r\n        $.each(rows, function(key, row) {\r\n            var $row = $(row),\r\n                targetHeight = 0;\r\n\r\n            if (!opts.target) {\r\n                // skip apply to rows with only one item\r\n                if (opts.byRow && $row.length <= 1) {\r\n                    $row.css(opts.property, '');\r\n                    return;\r\n                }\r\n\r\n                // iterate the row and find the max height\r\n                $row.each(function(){\r\n                    var $that = $(this),\r\n                        style = $that.attr('style'),\r\n                        display = $that.css('display');\r\n\r\n                    // temporarily force a usable display value\r\n                    if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\r\n                        display = 'block';\r\n                    }\r\n\r\n                    // ensure we get the correct actual height (and not a previously set height value)\r\n                    var css = { 'display': display };\r\n                    css[opts.property] = '';\r\n                    $that.css(css);\r\n\r\n                    // find the max height (including padding, but not margin)\r\n                    if ($that.outerHeight(false) > targetHeight) {\r\n                        targetHeight = $that.outerHeight(false);\r\n                    }\r\n\r\n                    // revert styles\r\n                    if (style) {\r\n                        $that.attr('style', style);\r\n                    } else {\r\n                        $that.css('display', '');\r\n                    }\r\n                });\r\n            } else {\r\n                // if target set, use the height of the target element\r\n                targetHeight = opts.target.outerHeight(false);\r\n            }\r\n\r\n            // iterate the row and apply the height to all elements\r\n            $row.each(function(){\r\n                var $that = $(this),\r\n                    verticalPadding = 0;\r\n\r\n                // don't apply to a target\r\n                if (opts.target && $that.is(opts.target)) {\r\n                    return;\r\n                }\r\n\r\n                // handle padding and border correctly (required when not using border-box)\r\n                if ($that.css('box-sizing') !== 'border-box') {\r\n                    verticalPadding += _parse($that.css('border-top-width')) + _parse($that.css('border-bottom-width'));\r\n                    verticalPadding += _parse($that.css('padding-top')) + _parse($that.css('padding-bottom'));\r\n                }\r\n\r\n                // set the height (accounting for padding and border)\r\n                $that.css(opts.property, (targetHeight - verticalPadding) + 'px');\r\n            });\r\n        });\r\n\r\n        // revert hidden parents\r\n        $hiddenParents.each(function() {\r\n            var $that = $(this);\r\n            $that.attr('style', $that.data('style-cache') || null);\r\n        });\r\n\r\n        // restore scroll position if enabled\r\n        if (matchHeight._maintainScroll) {\r\n            $(window).scrollTop((scrollTop / htmlHeight) * $('html').outerHeight(true));\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /*\r\n    *  matchHeight._applyDataApi\r\n    *  applies matchHeight to all elements with a data-match-height attribute\r\n    */\r\n\r\n    matchHeight._applyDataApi = function() {\r\n        var groups = {};\r\n\r\n        // generate groups by their groupId set by elements using data-match-height\r\n        $('[data-match-height], [data-mh]').each(function() {\r\n            var $this = $(this),\r\n                groupId = $this.attr('data-mh') || $this.attr('data-match-height');\r\n\r\n            if (groupId in groups) {\r\n                groups[groupId] = groups[groupId].add($this);\r\n            } else {\r\n                groups[groupId] = $this;\r\n            }\r\n        });\r\n\r\n        // apply matchHeight to each group\r\n        $.each(groups, function() {\r\n            this.matchHeight(true);\r\n        });\r\n    };\r\n\r\n    /*\r\n    *  matchHeight._update\r\n    *  updates matchHeight on all current groups with their correct options\r\n    */\r\n\r\n    var _update = function(event) {\r\n        if (matchHeight._beforeUpdate) {\r\n            matchHeight._beforeUpdate(event, matchHeight._groups);\r\n        }\r\n\r\n        $.each(matchHeight._groups, function() {\r\n            matchHeight._apply(this.elements, this.options);\r\n        });\r\n\r\n        if (matchHeight._afterUpdate) {\r\n            matchHeight._afterUpdate(event, matchHeight._groups);\r\n        }\r\n    };\r\n\r\n    matchHeight._update = function(throttle, event) {\r\n        // prevent update if fired from a resize event\r\n        // where the viewport width hasn't actually changed\r\n        // fixes an event looping bug in IE8\r\n        if (event && event.type === 'resize') {\r\n            var windowWidth = $(window).width();\r\n            if (windowWidth === _previousResizeWidth) {\r\n                return;\r\n            }\r\n            _previousResizeWidth = windowWidth;\r\n        }\r\n\r\n        // throttle updates\r\n        if (!throttle) {\r\n            _update(event);\r\n        } else if (_updateTimeout === -1) {\r\n            _updateTimeout = setTimeout(function() {\r\n                _update(event);\r\n                _updateTimeout = -1;\r\n            }, matchHeight._throttle);\r\n        }\r\n    };\r\n\r\n    /*\r\n    *  bind events\r\n    */\r\n\r\n    // apply on DOM ready event\r\n    $(matchHeight._applyDataApi);\r\n\r\n    // update heights on load and resize events\r\n    $(window).bind('load', function(event) {\r\n        matchHeight._update(false, event);\r\n    });\r\n\r\n    // throttled update heights on resize events\r\n    $(window).bind('resize orientationchange', function(event) {\r\n        matchHeight._update(true, event);\r\n    });\r\n\r\n});\r\n","/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.6.0\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var Slick = window.Slick || {};\n\n    Slick = (function() {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this, dataSettings;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-prev\" aria-label=\"Previous\" tabindex=\"0\" role=\"button\">Previous</button>',\n                nextArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-next\" aria-label=\"Next\" tabindex=\"0\" role=\"button\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function(slider, i) {\n                    return $('<button type=\"button\" data-role=\"none\" role=\"button\" tabindex=\"0\" />').text(i + 1);\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnFocus: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rows: 1,\n                rtl: false,\n                slide: '',\n                slidesPerRow: 1,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                useTransform: true,\n                variableWidth: false,\n                vertical: false,\n                verticalSwiping: false,\n                waitForAnimate: true,\n                zIndex: 1000\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false,\n                unslicked: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.focussed = false;\n            _.interrupted = false;\n            _.hidden = 'hidden';\n            _.paused = true;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.rowCount = 1;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = 'visibilitychange';\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n\n            if (typeof document.mozHidden !== 'undefined') {\n                _.hidden = 'mozHidden';\n                _.visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                _.hidden = 'webkitHidden';\n                _.visibilityChange = 'webkitvisibilitychange';\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\n            _.registerBreakpoints();\n            _.init(true);\n\n        }\n\n        return Slick;\n\n    }());\n\n    Slick.prototype.activateADA = function() {\n        var _ = this;\n\n        _.$slideTrack.find('.slick-active').attr({\n            'aria-hidden': 'false'\n        }).find('a, input, button, select').attr({\n            'tabindex': '0'\n        });\n\n    };\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || (index >= _.slideCount)) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof(index) === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function(index, element) {\n            $(element).attr('data-slick-index', index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.animateHeight = function() {\n        var _ = this;\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({\n                height: targetHeight\n            }, _.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function(targetLeft, callback) {\n\n        var animProps = {},\n            _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -(_.currentLeft);\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' +\n                                now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' +\n                                now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function() {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.getNavTarget = function() {\n\n        var _ = this,\n            asNavFor = _.options.asNavFor;\n\n        if ( asNavFor && asNavFor !== null ) {\n            asNavFor = $(asNavFor).not(_.$slider);\n        }\n\n        return asNavFor;\n\n    };\n\n    Slick.prototype.asNavFor = function(index) {\n\n        var _ = this,\n            asNavFor = _.getNavTarget();\n\n        if ( asNavFor !== null && typeof asNavFor === 'object' ) {\n            asNavFor.each(function() {\n                var target = $(this).slick('getSlick');\n                if(!target.unslicked) {\n                    target.slideHandler(index, true);\n                }\n            });\n        }\n\n    };\n\n    Slick.prototype.applyTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.autoPlay = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        if ( _.slideCount > _.options.slidesToShow ) {\n            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );\n        }\n\n    };\n\n    Slick.prototype.autoPlayClear = function() {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n    };\n\n    Slick.prototype.autoPlayIterator = function() {\n\n        var _ = this,\n            slideTo = _.currentSlide + _.options.slidesToScroll;\n\n        if ( !_.paused && !_.interrupted && !_.focussed ) {\n\n            if ( _.options.infinite === false ) {\n\n                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {\n                    _.direction = 0;\n                }\n\n                else if ( _.direction === 0 ) {\n\n                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\n                    if ( _.currentSlide - 1 === 0 ) {\n                        _.direction = 1;\n                    }\n\n                }\n\n            }\n\n            _.slideHandler( slideTo );\n\n        }\n\n    };\n\n    Slick.prototype.buildArrows = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true ) {\n\n            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n            if( _.slideCount > _.options.slidesToShow ) {\n\n                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.prependTo(_.options.appendArrows);\n                }\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.appendTo(_.options.appendArrows);\n                }\n\n                if (_.options.infinite !== true) {\n                    _.$prevArrow\n                        .addClass('slick-disabled')\n                        .attr('aria-disabled', 'true');\n                }\n\n            } else {\n\n                _.$prevArrow.add( _.$nextArrow )\n\n                    .addClass('slick-hidden')\n                    .attr({\n                        'aria-disabled': 'true',\n                        'tabindex': '-1'\n                    });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.buildDots = function() {\n\n        var _ = this,\n            i, dot;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$slider.addClass('slick-dotted');\n\n            dot = $('<ul />').addClass(_.options.dotsClass);\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n            }\n\n            _.$dots = dot.appendTo(_.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');\n\n        }\n\n    };\n\n    Slick.prototype.buildOut = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slider\n                .children( _.options.slide + ':not(.slick-cloned)')\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function(index, element) {\n            $(element)\n                .attr('data-slick-index', index)\n                .data('originalStyling', $(element).attr('style') || '');\n        });\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = (_.slideCount === 0) ?\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap(\n            '<div aria-live=\"polite\" class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n\n    };\n\n    Slick.prototype.buildRows = function() {\n\n        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;\n\n        newSlides = document.createDocumentFragment();\n        originalSlides = _.$slider.children();\n\n        if(_.options.rows > 1) {\n\n            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n            numOfSlides = Math.ceil(\n                originalSlides.length / slidesPerSection\n            );\n\n            for(a = 0; a < numOfSlides; a++){\n                var slide = document.createElement('div');\n                for(b = 0; b < _.options.rows; b++) {\n                    var row = document.createElement('div');\n                    for(c = 0; c < _.options.slidesPerRow; c++) {\n                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));\n                        if (originalSlides.get(target)) {\n                            row.appendChild(originalSlides.get(target));\n                        }\n                    }\n                    slide.appendChild(row);\n                }\n                newSlides.appendChild(slide);\n            }\n\n            _.$slider.empty().append(newSlides);\n            _.$slider.children().children().children()\n                .css({\n                    'width':(100 / _.options.slidesPerRow) + '%',\n                    'display': 'inline-block'\n                });\n\n        }\n\n    };\n\n    Slick.prototype.checkResponsive = function(initial, forceUpdate) {\n\n        var _ = this,\n            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n\n        if (_.respondTo === 'window') {\n            respondToWidth = windowWidth;\n        } else if (_.respondTo === 'slider') {\n            respondToWidth = sliderWidth;\n        } else if (_.respondTo === 'min') {\n            respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if ( _.options.responsive &&\n            _.options.responsive.length &&\n            _.options.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n                        _.activeBreakpoint =\n                            targetBreakpoint;\n                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                            _.unslick(targetBreakpoint);\n                        } else {\n                            _.options = $.extend({}, _.originalSettings,\n                                _.breakpointSettings[\n                                    targetBreakpoint]);\n                            if (initial === true) {\n                                _.currentSlide = _.options.initialSlide;\n                            }\n                            _.refresh(initial);\n                        }\n                        triggerBreakpoint = targetBreakpoint;\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                        _.unslick(targetBreakpoint);\n                    } else {\n                        _.options = $.extend({}, _.originalSettings,\n                            _.breakpointSettings[\n                                targetBreakpoint]);\n                        if (initial === true) {\n                            _.currentSlide = _.options.initialSlide;\n                        }\n                        _.refresh(initial);\n                    }\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if (initial === true) {\n                        _.currentSlide = _.options.initialSlide;\n                    }\n                    _.refresh(initial);\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            }\n\n            // only trigger breakpoints during an actual break. not on initialize.\n            if( !initial && triggerBreakpoint !== false ) {\n                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n            }\n        }\n\n    };\n\n    Slick.prototype.changeSlide = function(event, dontAnimate) {\n\n        var _ = this,\n            $target = $(event.currentTarget),\n            indexOffset, slideOffset, unevenOffset;\n\n        // If target is a link, prevent default action.\n        if($target.is('a')) {\n            event.preventDefault();\n        }\n\n        // If target is not the <li> element (ie: a child), find the <li>.\n        if(!$target.is('li')) {\n            $target = $target.closest('li');\n        }\n\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 :\n                    event.data.index || $target.index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                $target.children().trigger('focus');\n                break;\n\n            default:\n                return;\n        }\n\n    };\n\n    Slick.prototype.checkNavigable = function(index) {\n\n        var _ = this,\n            navigables, prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if (index > navigables[navigables.length - 1]) {\n            index = navigables[navigables.length - 1];\n        } else {\n            for (var n in navigables) {\n                if (index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.cleanUpEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots && _.$dots !== null) {\n\n            $('li', _.$dots)\n                .off('click.slick', _.changeSlide)\n                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n        _.$slider.off('focus.slick blur.slick');\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n        }\n\n        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n        _.$list.off('click.slick', _.clickHandler);\n\n        $(document).off(_.visibilityChange, _.visibility);\n\n        _.cleanUpSlideEvents();\n\n        if (_.options.accessibility === true) {\n            _.$list.off('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n        }\n\n        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.cleanUpSlideEvents = function() {\n\n        var _ = this;\n\n        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n    };\n\n    Slick.prototype.cleanUpRows = function() {\n\n        var _ = this, originalSlides;\n\n        if(_.options.rows > 1) {\n            originalSlides = _.$slides.children().children();\n            originalSlides.removeAttr('style');\n            _.$slider.empty().append(originalSlides);\n        }\n\n    };\n\n    Slick.prototype.clickHandler = function(event) {\n\n        var _ = this;\n\n        if (_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n    };\n\n    Slick.prototype.destroy = function(refresh) {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        _.cleanUpEvents();\n\n        $('.slick-cloned', _.$slider).detach();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n\n        if ( _.$prevArrow && _.$prevArrow.length ) {\n\n            _.$prevArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.prevArrow )) {\n                _.$prevArrow.remove();\n            }\n        }\n\n        if ( _.$nextArrow && _.$nextArrow.length ) {\n\n            _.$nextArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.nextArrow )) {\n                _.$nextArrow.remove();\n            }\n\n        }\n\n\n        if (_.$slides) {\n\n            _.$slides\n                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')\n                .removeAttr('aria-hidden')\n                .removeAttr('data-slick-index')\n                .each(function(){\n                    $(this).attr('style', $(this).data('originalStyling'));\n                });\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slideTrack.detach();\n\n            _.$list.detach();\n\n            _.$slider.append(_.$slides);\n        }\n\n        _.cleanUpRows();\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n        _.$slider.removeClass('slick-dotted');\n\n        _.unslicked = true;\n\n        if(!refresh) {\n            _.$slider.trigger('destroy', [_]);\n        }\n\n    };\n\n    Slick.prototype.disableTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = '';\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: _.options.zIndex\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: _.options.zIndex\n            });\n\n            if (callback) {\n                setTimeout(function() {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n\n        }\n\n    };\n\n    Slick.prototype.fadeSlideOut = function(slideIndex) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            }, _.options.speed, _.options.easing);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            });\n\n        }\n\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.$slidesCache = _.$slides;\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.focusHandler = function() {\n\n        var _ = this;\n\n        _.$slider\n            .off('focus.slick blur.slick')\n            .on('focus.slick blur.slick',\n                '*:not(.slick-arrow)', function(event) {\n\n            event.stopImmediatePropagation();\n            var $sf = $(this);\n\n            setTimeout(function() {\n\n                if( _.options.pauseOnFocus ) {\n                    _.focussed = $sf.is(':focus');\n                    _.autoPlay();\n                }\n\n            }, 0);\n\n        });\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n        var _ = this;\n        return _.currentSlide;\n\n    };\n\n    Slick.prototype.getDotCount = function() {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if (_.options.infinite === true) {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else if(!_.options.asNavFor) {\n            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n        }else {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n\n    };\n\n    Slick.prototype.getLeft = function(slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight(true);\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * -1;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if (slideIndex > _.slideCount) {\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n                    }\n                }\n            }\n        } else {\n            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n        } else {\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            if (_.options.rtl === true) {\n                if (targetSlide[0]) {\n                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                } else {\n                    targetLeft =  0;\n                }\n            } else {\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n            }\n\n            if (_.options.centerMode === true) {\n                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n\n                if (_.options.rtl === true) {\n                    if (targetSlide[0]) {\n                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                    } else {\n                        targetLeft =  0;\n                    }\n                } else {\n                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                }\n\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n        var _ = this;\n\n        return _.options[option];\n\n    };\n\n    Slick.prototype.getNavigableIndexes = function() {\n\n        var _ = this,\n            breakPoint = 0,\n            counter = 0,\n            indexes = [],\n            max;\n\n        if (_.options.infinite === false) {\n            max = _.slideCount;\n        } else {\n            breakPoint = _.options.slidesToScroll * -1;\n            counter = _.options.slidesToScroll * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max) {\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n        }\n\n        return indexes;\n\n    };\n\n    Slick.prototype.getSlick = function() {\n\n        return this;\n\n    };\n\n    Slick.prototype.getSlideCount = function() {\n\n        var _ = this,\n            slidesTraversed, swipedSlide, centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if (_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function(index, slide) {\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n\n        } else {\n            return _.options.slidesToScroll;\n        }\n\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n\n    };\n\n    Slick.prototype.init = function(creation) {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n\n            _.buildRows();\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n            _.checkResponsive(true);\n            _.focusHandler();\n\n        }\n\n        if (creation) {\n            _.$slider.trigger('init', [_]);\n        }\n\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n\n        if ( _.options.autoplay ) {\n\n            _.paused = false;\n            _.autoPlay();\n\n        }\n\n    };\n\n    Slick.prototype.initADA = function() {\n        var _ = this;\n        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n        }).find('a, input, button, select').attr({\n            'tabindex': '-1'\n        });\n\n        _.$slideTrack.attr('role', 'listbox');\n\n        _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {\n            $(this).attr({\n                'role': 'option',\n                'aria-describedby': 'slick-slide' + _.instanceUid + i + ''\n            });\n        });\n\n        if (_.$dots !== null) {\n            _.$dots.attr('role', 'tablist').find('li').each(function(i) {\n                $(this).attr({\n                    'role': 'presentation',\n                    'aria-selected': 'false',\n                    'aria-controls': 'navigation' + _.instanceUid + i + '',\n                    'id': 'slick-slide' + _.instanceUid + i + ''\n                });\n            })\n                .first().attr('aria-selected', 'true').end()\n                .find('button').attr('role', 'button').end()\n                .closest('div').attr('role', 'toolbar');\n        }\n        _.activateADA();\n\n    };\n\n    Slick.prototype.initArrowEvents = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'previous'\n               }, _.changeSlide);\n            _.$nextArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'next'\n               }, _.changeSlide);\n        }\n\n    };\n\n    Slick.prototype.initDotEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n        }\n\n        if ( _.options.dots === true && _.options.pauseOnDotsHover === true ) {\n\n            $('li', _.$dots)\n                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initSlideEvents = function() {\n\n        var _ = this;\n\n        if ( _.options.pauseOnHover ) {\n\n            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initializeEvents = function() {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n        _.initSlideEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n        if (_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.initUI = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n\n        }\n\n    };\n\n    Slick.prototype.keyHandler = function(event) {\n\n        var _ = this;\n         //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n            if (event.keyCode === 37 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'next' :  'previous'\n                    }\n                });\n            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'previous' : 'next'\n                    }\n                });\n            }\n        }\n\n    };\n\n    Slick.prototype.lazyLoad = function() {\n\n        var _ = this,\n            loadRange, cloneRange, rangeStart, rangeEnd;\n\n        function loadImages(imagesScope) {\n\n            $('img[data-lazy]', imagesScope).each(function() {\n\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy'),\n                    imageToLoad = document.createElement('img');\n\n                imageToLoad.onload = function() {\n\n                    image\n                        .animate({ opacity: 0 }, 100, function() {\n                            image\n                                .attr('src', imageSource)\n                                .animate({ opacity: 1 }, 200, function() {\n                                    image\n                                        .removeAttr('data-lazy')\n                                        .removeClass('slick-loading');\n                                });\n                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n                        });\n\n                };\n\n                imageToLoad.onerror = function() {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                };\n\n                imageToLoad.src = imageSource;\n\n            });\n\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n            if (_.options.fade === true) {\n                if (rangeStart > 0) rangeStart--;\n                if (rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n        loadImages(loadRange);\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-slide');\n            loadImages(cloneRange);\n        } else\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n\n    };\n\n    Slick.prototype.loadSlider = function() {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n\n    };\n\n    Slick.prototype.orientationChange = function() {\n\n        var _ = this;\n\n        _.checkResponsive();\n        _.setPosition();\n\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {\n\n        var _ = this;\n\n        _.autoPlay();\n        _.options.autoplay = true;\n        _.paused = false;\n        _.focussed = false;\n        _.interrupted = false;\n\n    };\n\n    Slick.prototype.postSlide = function(index) {\n\n        var _ = this;\n\n        if( !_.unslicked ) {\n\n            _.$slider.trigger('afterChange', [_, index]);\n\n            _.animating = false;\n\n            _.setPosition();\n\n            _.swipeLeft = null;\n\n            if ( _.options.autoplay ) {\n                _.autoPlay();\n            }\n\n            if (_.options.accessibility === true) {\n                _.initADA();\n            }\n\n        }\n\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n\n    };\n\n    Slick.prototype.preventDefault = function(event) {\n\n        event.preventDefault();\n\n    };\n\n    Slick.prototype.progressiveLazyLoad = function( tryCount ) {\n\n        tryCount = tryCount || 1;\n\n        var _ = this,\n            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),\n            image,\n            imageSource,\n            imageToLoad;\n\n        if ( $imgsToLoad.length ) {\n\n            image = $imgsToLoad.first();\n            imageSource = image.attr('data-lazy');\n            imageToLoad = document.createElement('img');\n\n            imageToLoad.onload = function() {\n\n                image\n                    .attr( 'src', imageSource )\n                    .removeAttr('data-lazy')\n                    .removeClass('slick-loading');\n\n                if ( _.options.adaptiveHeight === true ) {\n                    _.setPosition();\n                }\n\n                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);\n                _.progressiveLazyLoad();\n\n            };\n\n            imageToLoad.onerror = function() {\n\n                if ( tryCount < 3 ) {\n\n                    /**\n                     * try to load the image 3 times,\n                     * leave a slight delay so we don't get\n                     * servers blocking the request.\n                     */\n                    setTimeout( function() {\n                        _.progressiveLazyLoad( tryCount + 1 );\n                    }, 500 );\n\n                } else {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                    _.progressiveLazyLoad();\n\n                }\n\n            };\n\n            imageToLoad.src = imageSource;\n\n        } else {\n\n            _.$slider.trigger('allImagesLoaded', [ _ ]);\n\n        }\n\n    };\n\n    Slick.prototype.refresh = function( initializing ) {\n\n        var _ = this, currentSlide, lastVisibleIndex;\n\n        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\n        // in non-infinite sliders, we don't want to go past the\n        // last visible index.\n        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {\n            _.currentSlide = lastVisibleIndex;\n        }\n\n        // if less slides than to show, go to start.\n        if ( _.slideCount <= _.options.slidesToShow ) {\n            _.currentSlide = 0;\n\n        }\n\n        currentSlide = _.currentSlide;\n\n        _.destroy(true);\n\n        $.extend(_, _.initials, { currentSlide: currentSlide });\n\n        _.init();\n\n        if( !initializing ) {\n\n            _.changeSlide({\n                data: {\n                    message: 'index',\n                    index: currentSlide\n                }\n            }, false);\n\n        }\n\n    };\n\n    Slick.prototype.registerBreakpoints = function() {\n\n        var _ = this, breakpoint, currentBreakpoint, l,\n            responsiveSettings = _.options.responsive || null;\n\n        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {\n\n            _.respondTo = _.options.respondTo || 'window';\n\n            for ( breakpoint in responsiveSettings ) {\n\n                l = _.breakpoints.length-1;\n                currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n\n                    // loop through the breakpoints and cut out any existing\n                    // ones with the same breakpoint number, we don't want dupes.\n                    while( l >= 0 ) {\n                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {\n                            _.breakpoints.splice(l,1);\n                        }\n                        l--;\n                    }\n\n                    _.breakpoints.push(currentBreakpoint);\n                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\n                }\n\n            }\n\n            _.breakpoints.sort(function(a, b) {\n                return ( _.options.mobileFirst ) ? a-b : b-a;\n            });\n\n        }\n\n    };\n\n    Slick.prototype.reinit = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slideTrack\n                .children(_.options.slide)\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.registerBreakpoints();\n\n        _.setProps();\n        _.setupInfinite();\n        _.buildArrows();\n        _.updateArrows();\n        _.initArrowEvents();\n        _.buildDots();\n        _.updateDots();\n        _.initDotEvents();\n        _.cleanUpSlideEvents();\n        _.initSlideEvents();\n\n        _.checkResponsive(false, true);\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        _.setPosition();\n        _.focusHandler();\n\n        _.paused = !_.options.autoplay;\n        _.autoPlay();\n\n        _.$slider.trigger('reInit', [_]);\n\n    };\n\n    Slick.prototype.resize = function() {\n\n        var _ = this;\n\n        if ($(window).width() !== _.windowWidth) {\n            clearTimeout(_.windowDelay);\n            _.windowDelay = window.setTimeout(function() {\n                _.windowWidth = $(window).width();\n                _.checkResponsive();\n                if( !_.unslicked ) { _.setPosition(); }\n            }, 50);\n        }\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if (removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.setCSS = function(position) {\n\n        var _ = this,\n            positionProps = {},\n            x, y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n\n    };\n\n    Slick.prototype.setDimensions = function() {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: ('0px ' + _.options.centerPadding)\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: (_.options.centerPadding + ' 0px')\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n\n        if (_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n        } else if (_.options.variableWidth === true) {\n            _.$slideTrack.width(5000 * _.slideCount);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n    };\n\n    Slick.prototype.setFade = function() {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function(index, element) {\n            targetLeft = (_.slideWidth * index) * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: _.options.zIndex - 1,\n            opacity: 1\n        });\n\n    };\n\n    Slick.prototype.setHeight = function() {\n\n        var _ = this;\n\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n\n    };\n\n    Slick.prototype.setOption =\n    Slick.prototype.slickSetOption = function() {\n\n        /**\n         * accepts arguments in format of:\n         *\n         *  - for changing a single option's value:\n         *     .slick(\"setOption\", option, value, refresh )\n         *\n         *  - for changing a set of responsive options:\n         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n         *\n         *  - for updating multiple values at once (not responsive)\n         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n         */\n\n        var _ = this, l, item, option, value, refresh = false, type;\n\n        if( $.type( arguments[0] ) === 'object' ) {\n\n            option =  arguments[0];\n            refresh = arguments[1];\n            type = 'multiple';\n\n        } else if ( $.type( arguments[0] ) === 'string' ) {\n\n            option =  arguments[0];\n            value = arguments[1];\n            refresh = arguments[2];\n\n            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {\n\n                type = 'responsive';\n\n            } else if ( typeof arguments[1] !== 'undefined' ) {\n\n                type = 'single';\n\n            }\n\n        }\n\n        if ( type === 'single' ) {\n\n            _.options[option] = value;\n\n\n        } else if ( type === 'multiple' ) {\n\n            $.each( option , function( opt, val ) {\n\n                _.options[opt] = val;\n\n            });\n\n\n        } else if ( type === 'responsive' ) {\n\n            for ( item in value ) {\n\n                if( $.type( _.options.responsive ) !== 'array' ) {\n\n                    _.options.responsive = [ value[item] ];\n\n                } else {\n\n                    l = _.options.responsive.length-1;\n\n                    // loop through the responsive object and splice out duplicates.\n                    while( l >= 0 ) {\n\n                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {\n\n                            _.options.responsive.splice(l,1);\n\n                        }\n\n                        l--;\n\n                    }\n\n                    _.options.responsive.push( value[item] );\n\n                }\n\n            }\n\n        }\n\n        if ( refresh ) {\n\n            _.unload();\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.setPosition = function() {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger('setPosition', [_]);\n\n    };\n\n    Slick.prototype.setProps = function() {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined ||\n            bodyStyle.MozTransition !== undefined ||\n            bodyStyle.msTransition !== undefined) {\n            if (_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if ( _.options.fade ) {\n            if ( typeof _.options.zIndex === 'number' ) {\n                if( _.options.zIndex < 3 ) {\n                    _.options.zIndex = 3;\n                }\n            } else {\n                _.options.zIndex = _.defaults.zIndex;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = '-o-transform';\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = '-moz-transform';\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = '-webkit-transform';\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = '-ms-transform';\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = 'transform';\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);\n    };\n\n\n    Slick.prototype.setSlideClasses = function(index) {\n\n        var _ = this,\n            centerOffset, allSlides, indexOffset, remainder;\n\n        allSlides = _.$slider\n            .find('.slick-slide')\n            .removeClass('slick-active slick-center slick-current')\n            .attr('aria-hidden', 'true');\n\n        _.$slides\n            .eq(index)\n            .addClass('slick-current');\n\n        if (_.options.centerMode === true) {\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if (_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n\n                    _.$slides\n                        .slice(index - centerOffset, index + centerOffset + 1)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides\n                        .slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n                if (index === 0) {\n\n                    allSlides\n                        .eq(allSlides.length - 1 - _.options.slidesToShow)\n                        .addClass('slick-center');\n\n                } else if (index === _.slideCount - 1) {\n\n                    allSlides\n                        .eq(_.options.slidesToShow)\n                        .addClass('slick-center');\n\n                }\n\n            }\n\n            _.$slides\n                .eq(index)\n                .addClass('slick-center');\n\n        } else {\n\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n\n                _.$slides\n                    .slice(index, index + _.options.slidesToShow)\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else if (allSlides.length <= _.options.slidesToShow) {\n\n                allSlides\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else {\n\n                remainder = _.slideCount % _.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n\n                    allSlides\n                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    allSlides\n                        .slice(indexOffset, indexOffset + _.options.slidesToShow)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n            }\n\n        }\n\n        if (_.options.lazyLoad === 'ondemand') {\n            _.lazyLoad();\n        }\n\n    };\n\n    Slick.prototype.setupInfinite = function() {\n\n        var _ = this,\n            i, slideIndex, infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > (_.slideCount -\n                        infiniteCount); i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex - _.slideCount)\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex + _.slideCount)\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n                    $(this).attr('id', '');\n                });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.interrupt = function( toggle ) {\n\n        var _ = this;\n\n        if( !toggle ) {\n            _.autoPlay();\n        }\n        _.interrupted = toggle;\n\n    };\n\n    Slick.prototype.selectHandler = function(event) {\n\n        var _ = this;\n\n        var targetElement =\n            $(event.target).is('.slick-slide') ?\n                $(event.target) :\n                $(event.target).parents('.slick-slide');\n\n        var index = parseInt(targetElement.attr('data-slick-index'));\n\n        if (!index) index = 0;\n\n        if (_.slideCount <= _.options.slidesToShow) {\n\n            _.setSlideClasses(index);\n            _.asNavFor(index);\n            return;\n\n        }\n\n        _.slideHandler(index);\n\n    };\n\n    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {\n\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n            _ = this, navTarget;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if ( _.options.autoplay ) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        if ( _.options.asNavFor ) {\n\n            navTarget = _.getNavTarget();\n            navTarget = navTarget.slick('getSlick');\n\n            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {\n                navTarget.setSlideClasses(_.currentSlide);\n            }\n\n        }\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if (dontAnimate !== true) {\n\n                _.fadeSlideOut(oldSlide);\n\n                _.fadeSlide(animSlide, function() {\n                    _.postSlide(animSlide);\n                });\n\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if (dontAnimate !== true) {\n            _.animateSlide(targetLeft, function() {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n\n    };\n\n    Slick.prototype.startLoad = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n\n        }\n\n        _.$slider.addClass('slick-loading');\n\n    };\n\n    Slick.prototype.swipeDirection = function() {\n\n        var xDist, yDist, r, swipeAngle, _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n            return (_.options.rtl === false ? 'right' : 'left');\n        }\n        if (_.options.verticalSwiping === true) {\n            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {\n                return 'down';\n            } else {\n                return 'up';\n            }\n        }\n\n        return 'vertical';\n\n    };\n\n    Slick.prototype.swipeEnd = function(event) {\n\n        var _ = this,\n            slideCount,\n            direction;\n\n        _.dragging = false;\n        _.interrupted = false;\n        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;\n\n        if ( _.touchObject.curX === undefined ) {\n            return false;\n        }\n\n        if ( _.touchObject.edgeHit === true ) {\n            _.$slider.trigger('edge', [_, _.swipeDirection() ]);\n        }\n\n        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {\n\n            direction = _.swipeDirection();\n\n            switch ( direction ) {\n\n                case 'left':\n                case 'down':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :\n                            _.currentSlide + _.getSlideCount();\n\n                    _.currentDirection = 0;\n\n                    break;\n\n                case 'right':\n                case 'up':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :\n                            _.currentSlide - _.getSlideCount();\n\n                    _.currentDirection = 1;\n\n                    break;\n\n                default:\n\n\n            }\n\n            if( direction != 'vertical' ) {\n\n                _.slideHandler( slideCount );\n                _.touchObject = {};\n                _.$slider.trigger('swipe', [_, direction ]);\n\n            }\n\n        } else {\n\n            if ( _.touchObject.startX !== _.touchObject.curX ) {\n\n                _.slideHandler( _.currentSlide );\n                _.touchObject = {};\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.swipeHandler = function(event) {\n\n        var _ = this;\n\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n            return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n            return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n            event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options\n            .touchThreshold;\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.minSwipe = _.listHeight / _.options\n                .touchThreshold;\n        }\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n\n    };\n\n    Slick.prototype.swipeMove = function(event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft, swipeDirection, swipeLength, positionOffset, touches;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.swipeLength = Math.round(Math.sqrt(\n                Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n        }\n\n        swipeDirection = _.swipeDirection();\n\n        if (swipeDirection === 'vertical') {\n            return;\n        }\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n        if (_.options.verticalSwiping === true) {\n            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n        }\n\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n        }\n        if (_.options.verticalSwiping === true) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n\n    };\n\n    Slick.prototype.swipeStart = function(event) {\n\n        var _ = this,\n            touches;\n\n        _.interrupted = true;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.unload = function() {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n            _.$prevArrow.remove();\n        }\n\n        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n            _.$nextArrow.remove();\n        }\n\n        _.$slides\n            .removeClass('slick-slide slick-active slick-visible slick-current')\n            .attr('aria-hidden', 'true')\n            .css('width', '');\n\n    };\n\n    Slick.prototype.unslick = function(fromBreakpoint) {\n\n        var _ = this;\n        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n        _.destroy();\n\n    };\n\n    Slick.prototype.updateArrows = function() {\n\n        var _ = this,\n            centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if ( _.options.arrows === true &&\n            _.slideCount > _.options.slidesToShow &&\n            !_.options.infinite ) {\n\n            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            if (_.currentSlide === 0) {\n\n                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.updateDots = function() {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots\n                .find('li')\n                .removeClass('slick-active')\n                .attr('aria-hidden', 'true');\n\n            _.$dots\n                .find('li')\n                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))\n                .addClass('slick-active')\n                .attr('aria-hidden', 'false');\n\n        }\n\n    };\n\n    Slick.prototype.visibility = function() {\n\n        var _ = this;\n\n        if ( _.options.autoplay ) {\n\n            if ( document[_.hidden] ) {\n\n                _.interrupted = true;\n\n            } else {\n\n                _.interrupted = false;\n\n            }\n\n        }\n\n    };\n\n    $.fn.slick = function() {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i,\n            ret;\n        for (i = 0; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].slick = new Slick(_[i], opt);\n            else\n                ret = _[i].slick[opt].apply(_[i].slick, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n}));\n","/*\nThese functions make sure WordPress\nand Foundation play nice together.\n*/\n\njQuery(document).ready(function() {\n\n    // Remove empty P tags created by WP inside of Accordion and Orbit\n    jQuery('.accordion p:empty, .orbit p:empty').remove();\n\n\t // Makes sure last grid item floats left\n\tjQuery('.archive-grid .columns').last().addClass( 'end' );\n\n\t// Adds Flex Video to YouTube and Vimeo Embeds\n  jQuery('iframe[src*=\"youtube.com\"], iframe[src*=\"vimeo.com\"]').each(function() {\n    if ( jQuery(this).innerWidth() / jQuery(this).innerHeight() > 1.5 ) {\n      jQuery(this).wrap(\"<div class='widescreen flex-video'/>\");\n    } else {\n      jQuery(this).wrap(\"<div class='flex-video'/>\");\n    }\n  });\n\n});\n"]}